type Query {
  place(id: ID!): Place
  places(first: Int, offset: Int): [Place!]
}

type Mutation {
  createPlace(place: PlaceInput!): Place
  updatePlace(id: ID!, place: PlaceInput!): Place
  addCompetitor(placeId: ID!, competitorID: ID!): Place
  removeCompetitor(placeId: ID!, competitorID: ID!): Place
}

type Place {
  id: ID!
  name: String!
  address: Address!
  competitors: [Place!]
}

type Address {
  line1: String!
  line2: String
  city: String!
  country: String!
}

input PlaceInput {
  name: String!
  address: AddressInput
  competitorIDs: [ID!]
}

input AddressInput {
  line1: String!
  line2: String
  city: String!
  country: String!
}
